<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="erp.system.dao.RoleDao">
	<!-- 查询角色列表 -->
	<select id="findPageObjects" 
	resultType="erp.system.entity.Role">
		select id,name,note
		from role
		<where>
			<if test="name!=null and name!=''">
				name LIKE CONCAT('%',#{name},'%')
			</if>
		</where>
		LIMIT #{startIndex},#{pageSize}
	</select>
	<!-- 查询总共有多少条数据 -->
	<select id="getRowCounts" resultType="integer">
		select count(*) from role
		<where>
			<if test="name!=null and name!=''">
				name LIKE CONCAT('%',#{name},'%')
			</if>
		</where>
	</select>
	<!-- 保存   保存成功后将生成的主键返回给实体类对象的id属性
	useGeneratedKeys="true"：设置是否使用JDBC的getGenereatedKeys方法获取主键并赋值到keyProperty设置的领域模型属性 
	keyProperty="id"： 用于设置返回值将赋值到Role实体类对象的哪个属性中-->
	<insert id="insertObject"
	  parameterType="erp.system.entity.Role"
	  useGeneratedKeys="true"
	  keyProperty="id">
		insert into
			role(name,note,createdTime,modifiedTime)
		values
			(#{name}, #{note}, NOW(), NOW())
	</insert>
	
	<!-- 根据id查询角色信息 -->
	<select id="findObjectById" 
	 resultType="erp.system.entity.Role">
		select
		    id,
			name,
			note
		from
			role
		where
			id = #{id}
	</select>
	<!-- 更新角色信息 -->
	<update id="updateObject" 
	 parameterType="erp.system.entity.Role">
		update role
		set
			name = #{name},
			note = #{note},
			modifiedTime = NOW()
		where id = #{id}
	</update>
	
	<!-- 删除角色信息 -->
	<delete id="deleteObject" parameterType="integer">
		delete from role where id = #{id}
	</delete>
	
	<!-- 获取所有角色信息，用于创建用户选择角色 -->
	<select id="findObjects" resultType="map">
		select id,name
		from role
	</select>
</mapper>
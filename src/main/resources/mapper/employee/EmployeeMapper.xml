<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="erp.employee.dao.EmployeeDao">
     <sql id="findObjectsWhere">
         <where>
          <if test='name!=null and name!=""'>
             and employeeName like concat("%",#{name},"%") 
          </if>
          <if test="valid!=null">
             and valid=#{valid}
          </if>
          </where>
     </sql>
    
    <!-- 查询表中所有数据 -->
	<select id="findObjects" resultType="erp.employee.entity.Employee">
		select * from erp_employee 
		<include refid="findObjectsWhere"/>
       order by createdTime desc
       limit #{startIndex},#{pageSize};
	</select>
	 <!-- 根据id查找某条记录 -->
     <select id="findObjectById" resultType="erp.employee.entity.Employee">
       select * 
       from erp_employee
       where id=#{id} 
     </select>
     
     <select id="findObjectByEmployeeId" resultType="erp.employee.entity.Employee">
       select * 
       from erp_employee
       where employeeID=#{employeeid} 
     </select>
     
      <!-- 查询表中总记录数(要根据此数据计算总页数) -->
     <select id="getRowCount" 
          resultType="java.lang.Integer">
          select count(*) 
          from erp_employee
          <include refid="findObjectsWhere"/>
     </select>
     
     <insert id="insertObject" 
       parameterType="erp.employee.entity.Employee">
       insert into erp_employee(
       id,
       employeeID,
       employeeName,
       certID,
       sex,
       birthday,
       grade,
       inDate,
       regularDate,
       contractDate,
       endDate,
       education,
       university,
       graduatedDate,
       nativePlace,
       registeredResidence,
       fileLocation,
       mobilePhone,
       officePhone,
       emergencyContact,
       emergencyContactPhone,
       company,
       valid,
       note,
       createdTime,
       modifiedTime,
       createdUser,
       modifiedUser
       )values(
       #{id},
       #{employeeID},
       #{employeeName},
       #{certID},
       #{sex},
       #{birthday},
       #{grade},
       #{inDate},
       #{regularDate},
       #{contractDate},
       #{endDate},
       #{education},
       #{university},
       #{graduatedDate},
       #{nativePlace},
       #{registeredResidence},
       #{fileLocation},
       #{mobilePhone},
       #{officePhone},
       #{emergencyContact},
       #{emergencyContactPhone},
       #{company},
       #{valid},
       #{note},
       #{createdTime},
       #{modifiedTime},
       #{createdUser},
       #{modifiedUser}
       );
     </insert>
     
     <update id="updateObject"
      parameterType="erp.employee.entity.Employee">
      update erp_employee
      set 
      employeeName=#{employeeName},
      certID=#{certID},
      sex=#{sex},
      birthday=#{birthday},
      grade=#{grade},
      inDate=#{inDate},
      regularDate=#{regularDate},
      contractDate=#{contractDate},
      endDate=#{endDate},
      education=#{education},
      university=#{university},
      graduatedDate=#{graduatedDate},
      nativePlace=#{nativePlace},
      registeredResidence=#{registeredResidence},
      fileLocation=#{fileLocation},
      mobilePhone=#{mobilePhone},
      officePhone=#{officePhone},
      emergencyContact=#{emergencyContact},
      emergencyContactPhone=#{emergencyContactPhone},
      company=#{company},
      valid=#{valid},
      note=#{note},
      modifiedTime=now(),
      modifiedUser=#{modifiedUser}
      where id=#{id}
     </update>
     
     <update id="validById">
        update erp_employee
        set valid=#{valid}
        where id in 
        <if test="ids!=null and ids.length>0">
          <foreach collection="ids" 
                 open="(" close=")"
                 separator="," item="item">
                 #{item}
           </foreach>
        </if>
     </update>
</mapper> 